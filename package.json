{
  "name": "vim",
  "displayName": "Vim",
  "description": "Vim emulation for Visual Studio Code",
  "icon": "images/icon.png",
  "version": "0.1.10",
  "publisher": "vscodevim",
  "galleryBanner": {
    "color": "#a5c9a2",
    "theme": "light"
  },
  "license": "MIT",
  "keywords": [
    "vim",
    "vi",
    "vscodevim",
    "vsc-vim"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/VSCodeVim/Vim.git"
  },
  "homepage": "https://github.com/VSCodeVim/Vim",
  "bugs": {
    "url": "https://github.com/VSCodeVim/Vim/issues"
  },
  "engines": {
    "vscode": "^1.0.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "extension.showCmdLine",
        "title": "Vim: Show Command Line"
      }
    ],
    "keybindings": [
      {
        "key": "Escape",
        "command": "extension.vim_escape",
        "description": "End insert or Replace mode",
        "when": "editorTextFocus"
      },
      {
        "key": "Backspace",
        "command": "extension.vim_backspace",
        "description": "delete a character to the left",
        "when": "editorTextFocus"
      },
      {
        "key": "Delete",
        "command": "extension.vim_delete",
        "description": "delete the character under the cursor",
        "when": "editorTextFocus && vim.mode == 'Normal Mode'"
      },
      {
        "key": "tab",
        "command": "extension.vim_tab",
        "description": "Go to [count] newer position in the jump list",
        "when": "editorFocus && vim.mode == 'Normal Mode'"
      },
      {
        "key": "ctrl+r",
        "command": "extension.vim_ctrl+r",
        "description": "Redo [count] changes which were undone",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+f",
        "command": "extension.vim_ctrl+f",
        "description": "Scroll window [count] pages Forwards (downwards) in the buffer",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+b",
        "command": "extension.vim_ctrl+b",
        "description": "Scroll window [count] pages Backwards (upward) in the buffer",
        "when": "editorTextFocus && vim.mode != 'Insert Mode'"
      },
      {
        "key": "ctrl+h",
        "command": "extension.vim_ctrl+h",
	      "description": "delete character to the left (insert mode)",
        "when": "editorTextFocus && vim.mode == 'Insert Mode'"
      },
      {
        "key": "ctrl+e",
        "command": "extension.vim_ctrl+e",
        "description": "Scroll up",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+y",
        "command": "extension.vim_ctrl+y",
        "description": "go to earlier change",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+u",
        "command": "extension.vim_ctrl+u",
        "description": "Scroll up half a screen",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+v",
        "command": "extension.vim_ctrl+v",
        "description": "Visual block mode"
        "when": "editorTextFocus && vim.mode != 'Insert Mode' && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+d",
        "command": "extension.vim_ctrl+d",
        "description": "Scroll down half a screen",
        "when": "editorTextFocus && vim.useCtrlKeys"
      }
      {
        "key": "ctrl+[",
        "command": "extension.vim_ctrl+[",
        "description": "End insert or replace mode",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+w",
        "command": "extension.vim_ctrl+w",
        "description": "Prefix for Window commands (i.e. ctrl-w B)",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+c",
        "command": "extension.vim_ctrl+c",
        "description": "Interrupt current (search) command",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+a",
        "command": "extension.vim_ctrl+a",
        "description": "Add [count] to the number or alphabetic character at
			or after the cursor.",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+x",
        "command": "extension.vim_ctrl+x",
        "description": "Subtract [count] from the number or alphabetic character at
			or after the cursor.",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+t",
        "command": "extension.vim_ctrl+t",
        "description": "Jump to [count] older entry in the tag stack",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+pagedown",
        "command": "extension.vim_ctrl+pagedown",
        "description": "Scroll window [count] pages Forwards (downwards) in
			the buffer.",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "ctrl+pageup",
        "command": "extension.vim_ctrl+pageup",
        "description": "Scroll window [count] pages Backwards (upward) in
			the buffer.",
        "when": "editorTextFocus && vim.useCtrlKeys"
      },
      {
        "key": "left",
        "command": "extension.vim_left",
        "description": "move left one character",
        "when": "editorTextFocus && vim.mode != 'Insert Mode'"
      },
      {
        "key": "right",
        "command": "extension.vim_right",
        "description": "move right one character",
        "when": "editorTextFocus && vim.mode != 'Insert Mode'"
      },
      {
        "key": "up",
        "command": "extension.vim_up",
        "description": "move up one line",
        "when": "editorTextFocus && vim.mode != 'Insert Mode'"
      },
      {
        "key": "down",
        "command": "extension.vim_down",
        "description": "move down one line",
        "when": "editorTextFocus && vim.mode != 'Insert Mode'"
      }
    ],
    "configuration": {
      "title": "Vim Configuration",
      "type": "object",
      "properties": {
        "vim.otherModesKeyBindings": {
          "type": "array",
          "description": "Keybinding overrides to use for normal mode."
        },
        "vim.otherModesKeyBindingsNonRecursive": {
          "type": "array",
          "description": "Non-recursive keybinding overrides to use for normal mode."
        },
        "vim.useCtrlKeys": {
          "type": "boolean",
          "description": "Enable some vim ctrl key commands that override otherwise common operations, like ctrl+c"
        },
        "vim.useSystemClipboard": {
          "type": "boolean",
          "description": "Use system clipboard for unnamed register.",
          "default": false
        },
        "vim.insertModeKeyBindings": {
          "type": "array",
          "description": "Keybinding overrides to use for insert mode."
        },
        "vim.insertModeKeyBindingsNonRecursive": {
          "type": "array",
          "description": "Non-recursive keybinding overrides to use for insert mode."
        },
        "vim.useSolidBlockCursor": {
          "type": "boolean",
          "description": "Use a non blinking block cursor.",
          "default": false
        },
        "vim.scroll": {
          "type": "number",
          "description": "Number of lines to scroll with CTRL-U and CTRL-D commands.",
          "default": 20
        },
        "vim.iskeyword": {
          "type": "string",
          "description": "keywords contain alphanumeric characters and '_'",
          "default": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-"
        },
        "vim.ignorecase": {
          "type": "boolean",
          "description": "Ignore case in search patterns.",
          "default": true
        },
        "vim.smartcase": {
          "type": "boolean",
          "description": "Override the 'ignorecase' option if the search pattern contains upper case characters.",
          "default": true
        },
        "vim.hlsearch": {
          "type": "boolean",
          "description": "When there is a previous search pattern, highlight all its matches.",
          "default": false
        },
        "vim.autoindent": {
          "type": "boolean",
          "description": "Copy indent from current line when starting a new line.",
          "default": true
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "node ./node_modules/vscode/bin/compile -p ./",
    "compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
    "test": "node ./node_modules/vscode/bin/test",
    "postinstall": "node ./node_modules/vscode/bin/install && gulp init"
  },
  "dependencies": {
    "copy-paste": "^1.3.0",
    "diff-match-patch": "^1.0.0",
    "lodash": "^4.12.0"
  },
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-bump": "^2.1.0",
    "gulp-git": "^1.7.1",
    "gulp-inject-string": "^1.1.0",
    "gulp-shell": "^0.5.2",
    "gulp-soften": "^0.0.1",
    "gulp-tag-version": "^1.3.0",
    "gulp-trimlines": "^1.0.0",
    "gulp-tslint": "^6.1.1",
    "gulp-typescript": "^2.13.4",
    "gulp-typings": "^2.0.0",
    "merge-stream": "^1.0.0",
    "tslint": "^3.10.2",
    "typescript": "2.0.0",
    "typings": "^1.0.4",
    "vscode": "^0.11.16"
  }
}
